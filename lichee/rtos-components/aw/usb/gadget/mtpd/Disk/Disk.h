/*
* Copyright (c) 2019-2025 Allwinner Technology Co., Ltd. ALL rights reserved.
*
* Allwinner is a trademark of Allwinner Technology Co.,Ltd., registered in
* the the People's Republic of China and other countries.
* All Allwinner Technology Co.,Ltd. trademarks are used with permission.
*
* DISCLAIMER
* THIRD PARTY LICENCES MAY BE REQUIRED TO IMPLEMENT THE SOLUTION/PRODUCT.
* IF YOU NEED TO INTEGRATE THIRD PARTY’S TECHNOLOGY (SONY, DTS, DOLBY, AVS OR MPEGLA, ETC.)
* IN ALLWINNERS’SDK OR PRODUCTS, YOU SHALL BE SOLELY RESPONSIBLE TO OBTAIN
* ALL APPROPRIATELY REQUIRED THIRD PARTY LICENCES.
* ALLWINNER SHALL HAVE NO WARRANTY, INDEMNITY OR OTHER OBLIGATIONS WITH RESPECT TO MATTERS
* COVERED UNDER ANY REQUIRED THIRD PARTY LICENSE.
* YOU ARE SOLELY RESPONSIBLE FOR YOUR USAGE OF THIRD PARTY’S TECHNOLOGY.
*
*
* THIS SOFTWARE IS PROVIDED BY ALLWINNER"AS IS" AND TO THE MAXIMUM EXTENT
* PERMITTED BY LAW, ALLWINNER EXPRESSLY DISCLAIMS ALL WARRANTIES OF ANY KIND,
* WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING WITHOUT LIMITATION REGARDING
* THE TITLE, NON-INFRINGEMENT, ACCURACY, CONDITION, COMPLETENESS, PERFORMANCE
* OR MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
* IN NO EVENT SHALL ALLWINNER BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS, OR BUSINESS INTERRUPTION)
* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
* STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
* OF THE POSSIBILITY OF SUCH DAMAGE.
*/
#ifndef _DISK_H
#define _DISK_H
#include <stdint.h>
#include "Dir.h"

#define NAME_LENGTH_MAX 	(256)

typedef uint32_t DiskType;
typedef uint32_t DiskFsType;
typedef uint64_t DiskFreeSpace;
typedef uint64_t DiskMaxCapacity;

enum {
	DISK_FS_TYPE_EXT4	= 0xEF53,
	DISK_FS_TYPE_FAT	= 0x4D44,
	DISK_FS_TYPE_FUSE	= 0x65735546,
	DISK_FS_TYPE_PROC	= 0x9FA0,
	DISK_FS_TYPE_SYSFS	= 0x62656572,
	DISK_FS_TYPE_CGROUPFS	= 0x27E0EB,
	DISK_FS_TYPE_TMPFS	= 0x01021994,
	DISK_FS_TYPE_DEBUGFS	= 0x64626720,
	DISK_FS_TYPE_DEVTMPFS	= 0x1021994,
	DISK_FS_TYPE_DEVPTS	= 0x1CD1,
	DISK_FS_TYPE_ROOTFS	= 0x794C764F,
	DISK_FS_TYPE_SQUASHFS	= 0x73717368,
	DISK_FS_TYPE_OVERLAYFS  = 0x794C7630,
};


struct Disk {
	DiskType dType;
	DiskFsType dFsType;
	DiskFreeSpace dFreeSpace;
	DiskMaxCapacity dMaxCap;

	struct Dir *dDirRoot;

	struct list_head dirList;
	struct list_head fileList;

	char *dMountDir;

	void (*addSubFile)(struct File *file, struct Disk *disk);
	void (*addSubDir)(struct Dir *dir, struct Disk *disk);
};

struct Disk *DiskInit(const char *path);
void  DiskRelease(struct Disk *disk);
#endif
